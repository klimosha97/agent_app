#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤
# –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∏ –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤"
echo "================================================================"

# #–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker –∏ Docker Compose
# echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."

# if ! command -v docker &> /dev/null; then
#     echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker."
#     exit 1
# fi

# if ! command -v docker-compose &> /dev/null; then
#     echo "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose."
#     exit 1
# fi

# echo "‚úÖ Docker –∏ Docker Compose –Ω–∞–π–¥–µ–Ω—ã"

# # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
# echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
# mkdir -p uploads
# mkdir -p logs
# mkdir -p backend/logs

# # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
# chmod 755 uploads
# chmod 755 logs

# echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ –∑–∞–ø—É—â–µ–Ω—ã
# echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
# docker-compose down -v || true

# # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
# if [[ "$1" == "--clean" ]]; then
#     echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
#     docker-compose down --rmi all -v || true
#     docker system prune -f || true
# fi

# # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
# echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤..."
# docker-compose build --no-cache

# # –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
# echo "üóÑÔ∏è  –ó–∞–ø—É—Å–∫ PostgreSQL..."
# docker-compose up -d db

# # –ñ–¥—ë–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
# echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
# sleep 10

# # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î
# echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
# max_attempts=30
# attempt=1

# while [ $attempt -le $max_attempts ]; do
#     if docker-compose exec -T db pg_isready -U klim -d football_stats &> /dev/null; then
#         echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞"
#         break
#     fi
    
#     if [ $attempt -eq $max_attempts ]; then
#         echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
#         docker-compose logs db
#         exit 1
#     fi
    
#     echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤–∞..."
#     sleep 2
#     ((attempt++))
# done

# # –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π Alembic
# echo "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏..."
# docker-compose run --rm backend alembic revision --autogenerate -m "Initial migration"

echo "üìä –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
docker-compose run --rm backend alembic upgrade head

#–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üåü –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose up -d

# –ñ–¥—ë–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞..."
backend_ready=false
max_attempts=30
attempt=1

while [ $attempt -le $max_attempts ]; do
    if curl -f http://localhost:8000/health &> /dev/null; then
        backend_ready=true
        echo "‚úÖ –ë—ç–∫–µ–Ω–¥ –≥–æ—Ç–æ–≤"
        break
    fi
    
    if [ $attempt -eq $max_attempts ]; then
        echo "‚ùå –ë—ç–∫–µ–Ω–¥ –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
        docker-compose logs backend
        break
    fi
    
    echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: –±—ç–∫–µ–Ω–¥ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤..."
    sleep 3
    ((attempt++))
done

# –ñ–¥—ë–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
frontend_ready=false
max_attempts=20
attempt=1

while [ $attempt -le $max_attempts ]; do
    if curl -f http://localhost:3000 &> /dev/null; then
        frontend_ready=true
        echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –≥–æ—Ç–æ–≤"
        break
    fi
    
    if [ $attempt -eq $max_attempts ]; then
        echo "‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
        docker-compose logs frontend
        break
    fi
    
    echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –µ—â—ë –Ω–µ –≥–æ—Ç–æ–≤..."
    sleep 5
    ((attempt++))
done

echo ""
echo "================================================================"
echo "üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "   üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥:     http://localhost:3000"
echo "   üîå Backend API:   http://localhost:8000"
echo "   üìñ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs"
echo "   üóÑÔ∏è  Adminer (–ë–î):  http://localhost:8080"
echo ""
echo "üìä –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:"
echo "   –•–æ—Å—Ç: localhost:5432"
echo "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: klim"
echo "   –ü–∞—Ä–æ–ª—å: Orel1997"
echo "   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: football_stats"
echo ""
echo "üìÅ –í–∞–∂–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
echo "   üìÇ –ó–∞–≥—Ä—É–∑–∫–∏ Excel: ./uploads"
echo "   üìú –õ–æ–≥–∏: ./logs"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo "   –õ–æ–≥–∏: docker-compose logs -f [—Å–µ—Ä–≤–∏—Å]"
echo "   –†–µ—Å—Ç–∞—Ä—Ç: docker-compose restart [—Å–µ—Ä–≤–∏—Å]"
echo ""
echo "üìñ –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:"
echo "   1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000"
echo "   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É '–¢—É—Ä–Ω–∏—Ä—ã'"
echo "   3. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª yfl1.xlsx —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –∑–∞–≥—Ä—É–∑–∫–∏"
echo "   4. –ò–∑—É—á–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –¥–æ–±–∞–≤—å—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ"
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps

echo ""
echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å–∞–º –≤—ã—à–µ."
echo "================================================================"



